{"ast":null,"code":"var _jsxFileName = \"/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Question from './Question';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [false, false, false, false, false, false, false, false, false, false]\n    };\n    this.updateSidebar = this.updateSidebar.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({\n      questions: data\n    }));\n  }\n\n  submit() {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  inc_right() {\n    console.log('incr');\n    let temp = this.state.right + 1;\n    this.setState({\n      right: temp\n    });\n  }\n\n  makeSidebar() {\n    let items = [];\n\n    for (let i = 1; i < 11; i++) {\n      items.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `#${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 31\n        }\n      }, \"Question \", i)));\n    }\n\n    return items;\n  }\n\n  updateSidebar(num) {\n    console.log(this);\n    let side = [...this.state.sidebar];\n    side[num] = true;\n    this.setState({\n      sidebar: side\n    });\n  }\n\n  display_questions(sub) {\n    return this.state.questions.map((question, index) => this.display_question(question, index, sub));\n  }\n\n  display_question(question, num, sub) {\n    var answer = question.answer;\n    var options = question.options;\n    var tweet = question.tweet;\n    var cor = [];\n\n    for (let i = 0; i < options.length; i++) {\n      cor.push(options[i] === answer);\n    }\n\n    return /*#__PURE__*/React.createElement(Question, {\n      side: () => this.updateSidebar,\n      key: num,\n      tweet: tweet,\n      options: options,\n      answer: answer,\n      num: num,\n      submitted: sub,\n      correct: cor,\n      inc: () => this.inc_right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.submitted) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, this.makeSidebar(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: () => this.submit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \" submit answers\")), this.state.questions && this.display_questions(false));\n    } else {\n      // console.log('out',this.state.sidebar)\n      console.log(this.state.right);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"score\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, this.state.right, \"/10\"), this.makeSidebar()), this.state.questions && this.display_questions(this.state.questions, true));\n    }\n  }\n\n} // function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js"],"names":["React","Question","App","Component","constructor","props","state","title","submitted","right","sidebar","updateSidebar","bind","componentDidMount","fetch","then","response","json","data","setState","questions","submit","inc_right","console","log","temp","makeSidebar","items","i","push","num","side","display_questions","sub","map","question","index","display_question","answer","options","tweet","cor","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,YADI;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,OAAO,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD;AAJE,KAAb;AAMA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA2CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAvD,EAAwEF,IAAxE,CAA6EG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,MAAAA,SAAS,EAACF;AAAX,KAAd,CAArF;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,SAAKF,QAAL,CAAc;AAACX,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACD;;AAEDc,EAAAA,SAAS,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,IAAI,GAAG,KAAKnB,KAAL,CAAWG,KAAX,GAAiB,CAA5B;AACA,SAAKU,QAAL,CAAc;AAACV,MAAAA,KAAK,EAAEgB;AAAR,KAAd;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,KAAK,CAACE,IAAN,eAAW;AAAI,QAAA,GAAG,EAAGD,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAG,QAAA,IAAI,EAAG,IAAGA,CAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4BA,CAA5B,CAAb,CAAX;AACD;;AACD,WAAOD,KAAP;AACD;;AAEDhB,EAAAA,aAAa,CAACmB,GAAD,EAAM;AACjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,QAAIO,IAAI,GAAG,CAAC,GAAG,KAAKzB,KAAL,CAAWI,OAAf,CAAX;AACAqB,IAAAA,IAAI,CAACD,GAAD,CAAJ,GAAY,IAAZ;AACA,SAAKX,QAAL,CAAc;AAACT,MAAAA,OAAO,EAACqB;AAAT,KAAd;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,GAAD,EAAM;AACrB,WAAO,KAAK3B,KAAL,CAAWc,SAAX,CAAqBc,GAArB,CAAyB,CAACC,QAAD,EAAWC,KAAX,KAAqB,KAAKC,gBAAL,CAAsBF,QAAtB,EAAgCC,KAAhC,EAAuCH,GAAvC,CAA9C,CAAP;AACD;;AAEDI,EAAAA,gBAAgB,CAACF,QAAD,EAAWL,GAAX,EAAeG,GAAf,EAAoB;AAClC,QAAIK,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AACA,QAAIC,OAAO,GAAGJ,QAAQ,CAACI,OAAvB;AACA,QAAIC,KAAK,GAAGL,QAAQ,CAACK,KAArB;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,OAAO,CAACG,MAA5B,EAAoCd,CAAC,EAArC,EACA;AACEa,MAAAA,GAAG,CAACZ,IAAJ,CAASU,OAAO,CAACX,CAAD,CAAP,KAAaU,MAAtB;AACD;;AACD,wBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAI,MAAM,KAAK3B,aAA7B;AAA4C,MAAA,GAAG,EAAImB,GAAnD;AAAwD,MAAA,KAAK,EAAIU,KAAjE;AAAwE,MAAA,OAAO,EAAID,OAAnF;AAA4F,MAAA,MAAM,EAAID,MAAtG;AAA8G,MAAA,GAAG,EAAER,GAAnH;AAAwH,MAAA,SAAS,EAAEG,GAAnI;AAAwI,MAAA,OAAO,EAAIQ,GAAnJ;AAAwJ,MAAA,GAAG,EAAK,MAAM,KAAKnB,SAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKrC,KAAL,CAAWE,SAAhB,EAA2B;AACzB,0BACM;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAG,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWC,KADhB,CADF,eAIE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKmB,WAAL,EADL,eAEI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAI,MAAM,KAAKL,MAAL,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAJF,EAQG,KAAKf,KAAL,CAAWc,SAAX,IAAwB,KAAKY,iBAAL,CAAuB,KAAvB,CAR3B,CADN;AAYD,KAbD,MAcK;AACH;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,KAAvB;AACA,0BACE;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAG,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWC,KADhB,CADF,eAIE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWG,KAArC,QADJ,EAEK,KAAKiB,WAAL,EAFL,CAJF,EAQG,KAAKpB,KAAL,CAAWc,SAAX,IAAwB,KAAKY,iBAAL,CAAuB,KAAK1B,KAAL,CAAWc,SAAlC,EAA6C,IAA7C,CAR3B,CADF;AAYD;AACF;;AA1F+B,C,CA6FlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Question from './Question'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [false,false,false,false,false,false,false,false,false,false]\n    } \n    this.updateSidebar = this.updateSidebar.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({questions:data}));\n  }\n\n  submit() {\n    this.setState({submitted: true})\n  }\n\n  inc_right() {\n    console.log('incr')\n    let temp = this.state.right+1\n    this.setState({right: temp})\n  }\n\n  makeSidebar() {\n    let items = []\n    for (let i = 1; i < 11; i++) {\n      items.push(<li key= {i}><a href={`#${i}`}>Question {i}</a></li>)\n    }\n    return items\n  }\n\n  updateSidebar(num) {\n    console.log(this)\n    let side = [...this.state.sidebar]\n    side[num] = true\n    this.setState({sidebar:side})\n  }\n\n  display_questions(sub) {\n    return this.state.questions.map((question, index) => this.display_question(question, index, sub))\n  }\n  \n  display_question(question, num,sub) {\n    var answer = question.answer\n    var options = question.options\n    var tweet = question.tweet\n    var cor = []\n    for (let i = 0; i < options.length; i++)\n    {\n      cor.push(options[i]===answer)\n    }\n    return (\n      <Question side = {() => this.updateSidebar} key = {num} tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n    )\n  }\n  \n  render() {\n    if (!this.state.submitted) {\n      return (\n            <div className = 'App-body'>\n              <header className = 'App-header'>\n                  {this.state.title}\n              </header>\n              <ul className='sidebar'>\n                  {this.makeSidebar()}\n                  <button className='submit' onClick = {() => this.submit()}> submit answers</button>\n              </ul>              \n              {this.state.questions && this.display_questions(false)}\n            </div>\n      );\n    }\n    else {\n      // console.log('out',this.state.sidebar)\n      console.log(this.state.right)\n      return (\n        <div className = 'App-body'>\n          <header className = 'App-header'>\n              {this.state.title}\n          </header>\n          <ul className='sidebar'>\n              <div className = 'score'>{this.state.right}/10</div>\n              {this.makeSidebar()}\n          </ul>\n          {this.state.questions && this.display_questions(this.state.questions, true)}\n        </div>\n      )\n    }\n  }\n}\n\n// function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}