{"ast":null,"code":"var _jsxFileName = \"/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Question from './Question';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [],\n      num_questions: 10,\n      selected: []\n    };\n    this.updateSelected = this.updateSelected.bind(this);\n    this.add_lists();\n  }\n\n  add_lists() {\n    for (let i = 0; i < this.state.num_questions; i++) {\n      this.state.sidebar.push(false);\n      this.state.selected.push(null);\n    }\n  }\n\n  updateSelected(q_num, pos) {\n    let temp = [...this.state.selected];\n    temp[q_num] = pos;\n    this.setState({\n      selected: temp\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({\n      questions: data\n    }));\n  }\n\n  submit() {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  makeSidebar() {\n    let items = [];\n\n    for (let i = 1; i < this.state.num_questions + 1; i++) {\n      items.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `#${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }\n      }, \"Question \", i)));\n    }\n\n    return items;\n  }\n\n  makeFinalSidebar(ans) {\n    let items = [];\n\n    for (let i = 1; i < this.state.num_questions + 1; i++) {\n      if (ans[i - 1]) {\n        items.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: `#${i}`,\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }\n        }, \"Question \", i)));\n      } else {\n        items.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: `#${i}`,\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }\n        }, \"Question \", i)));\n      }\n    }\n\n    return items;\n  }\n\n  display_questions(sub) {\n    let x = [];\n\n    for (let i = 0; i < this.state.num_questions; i++) {\n      x.push(this.state.questions[i]);\n    }\n\n    return x.map((question, index) => this.display_question(question, index, sub));\n  }\n\n  display_question(question, num, sub) {\n    var answer = question.answer;\n    var options = question.options;\n    var tweet = question.tweet;\n    var cor = [];\n\n    for (let i = 0; i < options.length; i++) {\n      cor.push(options[i] === answer);\n    }\n\n    return /*#__PURE__*/React.createElement(Question, {\n      upd: this.updateSelected,\n      key: num,\n      tweet: tweet,\n      options: options,\n      answer: answer,\n      num: num,\n      submitted: sub,\n      correct: cor,\n      inc: this.inc_right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    });\n  }\n\n  total_score() {\n    let score = 0;\n    let ans = [];\n\n    for (let i = 0; i < this.state.num_questions; i++) {\n      let sel = this.state.selected[i];\n      let cur = this.state.questions[i];\n      console.log(this.state.questions[i]);\n      console.log(this.state.selected);\n\n      if (sel && cur.options[sel] === cur.answer) {\n        score++;\n        ans.push(true);\n      } else {\n        ans.push(false);\n      }\n    }\n\n    console.log('Score:', score);\n    return [score, ans];\n  }\n\n  render() {\n    if (!this.state.submitted) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, this.makeSidebar(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: () => this.submit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, \" submit answers\")), this.state.questions && this.display_questions(false));\n    } else {\n      let scores = this.total_score();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"score\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, scores[0], \"/10\"), this.makeFinalSidebar(scores[1])), this.state.questions && this.display_questions(this.state.questions, true));\n    }\n  }\n\n} // function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js"],"names":["React","Question","App","Component","constructor","props","state","title","submitted","right","sidebar","num_questions","selected","updateSelected","bind","add_lists","i","push","q_num","pos","temp","setState","componentDidMount","fetch","then","response","json","data","questions","submit","makeSidebar","items","makeFinalSidebar","ans","color","display_questions","sub","x","map","question","index","display_question","num","answer","options","tweet","cor","length","inc_right","total_score","score","sel","cur","console","log","render","scores"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Question from './Question'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [],\n      num_questions: 10,\n      selected: []\n    } \n    this.updateSelected = this.updateSelected.bind(this);\n    this.add_lists()\n  }\n\n  add_lists() {\n    for (let i = 0; i < this.state.num_questions; i++) {\n      this.state.sidebar.push(false)\n      this.state.selected.push(null)\n    }\n  }\n\n  updateSelected(q_num, pos) {\n    let temp = [...this.state.selected]\n    temp[q_num] = pos\n    this.setState({selected:temp})\n  }\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({questions:data}));\n  }\n\n  submit() {\n    this.setState({submitted: true})\n  }\n\n\n  makeSidebar() {\n    let items = []\n    for (let i = 1; i < this.state.num_questions+1; i++) {\n      items.push(<li key= {i}><a href={`#${i}`}>Question {i}</a></li>)\n    }\n    return items\n  }\n\n  makeFinalSidebar(ans) {\n    let items = []\n    for (let i = 1; i < this.state.num_questions+1; i++) {\n      if (ans[i-1]) {\n        items.push(<li key= {i}><a href={`#${i}`} style = {{color: \"green\"}}>Question {i}</a></li>)\n      }\n      else {\n        items.push(<li key= {i}><a href={`#${i}`} style = {{color: \"red\"}}>Question {i}</a></li>)\n      }\n    }\n    return items\n  }\n\n  display_questions(sub) {\n    let x = []\n    for (let i=0; i<this.state.num_questions; i++) {\n      x.push(this.state.questions[i])\n    }\n    return x.map((question, index) => this.display_question(question, index, sub))\n  }\n  \n  display_question(question, num,sub) {\n    var answer = question.answer\n    var options = question.options\n    var tweet = question.tweet\n    var cor = []\n    for (let i = 0; i < options.length; i++)\n    {\n      cor.push(options[i]===answer)\n    }\n    return (\n      <Question upd = {this.updateSelected} key = {num} tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {this.inc_right}></Question>\n    )\n  }\n\n  total_score() {\n    let score = 0\n    let ans = []\n      for (let i=0; i < this.state.num_questions; i++) {\n        let sel = this.state.selected[i];\n        let cur = this.state.questions[i];\n        console.log(this.state.questions[i])\n        console.log(this.state.selected)\n        if (sel && cur.options[sel] === cur.answer ) {\n          score++;\n          ans.push(true)\n        }\n        else {\n          ans.push(false)\n        }\n      }\n    console.log('Score:',score)\n    return [score, ans]\n  }\n  \n  render() {\n    if (!this.state.submitted) {\n      return (\n            <div className = 'App-body'>\n              <header className = 'App-header'>\n                  {this.state.title}\n              </header>\n              <ul className='sidebar'>\n                  {this.makeSidebar()}\n                  <button className='submit' onClick = {() => this.submit()}> submit answers</button>\n              </ul>              \n              {this.state.questions && this.display_questions(false)}\n            </div>\n      );\n    }\n    else {\n      let scores = this.total_score()\n      return (\n        <div className = 'App-body'>\n          <header className = 'App-header'>\n              {this.state.title}\n          </header>\n          <ul className='sidebar'>\n              <div className = 'score'>{scores[0]}/10</div>\n              {this.makeFinalSidebar(scores[1])}\n          </ul>\n          {this.state.questions && this.display_questions(this.state.questions, true)}\n          {/* {x} */}\n        </div>\n        \n\n      )\n    }\n  }\n}\n\n// function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}