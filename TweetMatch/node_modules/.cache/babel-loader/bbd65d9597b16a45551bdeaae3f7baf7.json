{"ast":null,"code":"var _jsxFileName = \"/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Question from './Question';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inc_right = () => {\n      console.log('incr');\n      let temp = this.state.right + 1;\n      this.setState({\n        right: temp\n      });\n    };\n\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [],\n      num_questions: 1\n    };\n    this.updateSidebar = this.updateSidebar.bind(this); // this.inc_right = this.inc_right.bind(this);\n\n    this.add_sidebar();\n  } // shouldComponentUpdate() {\n  //   return this.state.right @= 0\n  // }\n\n\n  add_sidebar() {\n    for (let i = 0; i < this.state.num_questions; i++) {\n      this.state.sidebar.push(false);\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({\n      questions: data\n    }));\n  }\n\n  submit() {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  makeSidebar() {\n    let items = [];\n\n    for (let i = 1; i < this.state.num_questions + 1; i++) {\n      items.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: `#${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }\n      }, \"Question \", i)));\n    }\n\n    return items;\n  }\n\n  updateSidebar(num) {\n    console.log(this);\n    let side = [...this.state.sidebar];\n    side[num] = true;\n    this.setState({\n      sidebar: side\n    });\n  }\n\n  display_questions(sub) {\n    let x = [];\n\n    for (let i = 0; i < this.state.num_questions; i++) {\n      x.push(this.state.questions[i]);\n    }\n\n    return x.map((question, index) => this.display_question(question, index, sub)); // this.display_question(this.state.questions[0], 0, sub)\n  }\n\n  display_question(question, num, sub) {\n    var answer = question.answer;\n    var options = question.options;\n    var tweet = question.tweet;\n    var cor = [];\n\n    for (let i = 0; i < options.length; i++) {\n      cor.push(options[i] === answer);\n    }\n\n    return /*#__PURE__*/React.createElement(Question, {\n      key: num,\n      tweet: tweet,\n      options: options,\n      answer: answer,\n      num: num,\n      submitted: sub,\n      correct: cor,\n      inc: this.inc_right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.submitted) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, this.makeSidebar(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: () => this.submit(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, \" submit answers\")), this.state.questions && this.display_questions(false));\n    } else {\n      // console.log('out',this.state.sidebar)\n      let x = this.state.questions && this.display_questions(true).then(() => console.log(this.state.right));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"score\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, this.state.right, \"/10\"), this.makeSidebar()), x);\n    }\n  }\n\n} // function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/amar/Desktop/Twitter Project/tweet-match/src/App.js"],"names":["React","Question","App","Component","constructor","props","inc_right","console","log","temp","state","right","setState","title","submitted","sidebar","num_questions","updateSidebar","bind","add_sidebar","i","push","componentDidMount","fetch","then","response","json","data","questions","submit","makeSidebar","items","num","side","display_questions","sub","x","map","question","index","display_question","answer","options","tweet","cor","length","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Question from './Question'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'TweetMatch',\n      submitted: false,\n      right: 0,\n      sidebar: [],\n      num_questions: 1\n    } \n    this.updateSidebar = this.updateSidebar.bind(this);\n    // this.inc_right = this.inc_right.bind(this);\n    this.add_sidebar()\n  }\n\n  // shouldComponentUpdate() {\n  //   return this.state.right @= 0\n  // }\n\n  add_sidebar() {\n    for (let i = 0; i < this.state.num_questions; i++) {\n      this.state.sidebar.push(false)\n    }\n  }\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/tweets').then(response => response.json()).then(data => this.setState({questions:data}));\n  }\n\n  submit() {\n    this.setState({submitted: true})\n  }\n\n  inc_right = () => {\n    console.log('incr')\n    let temp = this.state.right+1\n    this.setState({right: temp})\n  }\n\n  makeSidebar() {\n    let items = []\n    for (let i = 1; i < this.state.num_questions+1; i++) {\n      items.push(<li key= {i}><a href={`#${i}`}>Question {i}</a></li>)\n    }\n    return items\n  }\n\n  updateSidebar(num) {\n    console.log(this)\n    let side = [...this.state.sidebar]\n    side[num] = true\n    this.setState({sidebar:side})\n  }\n\n  display_questions(sub) {\n    let x = []\n    for (let i=0; i<this.state.num_questions; i++) {\n      x.push(this.state.questions[i])\n    }\n    return x.map((question, index) => this.display_question(question, index, sub))\n    // this.display_question(this.state.questions[0], 0, sub)\n  }\n  \n  display_question(question, num,sub) {\n    var answer = question.answer\n    var options = question.options\n    var tweet = question.tweet\n    var cor = []\n    for (let i = 0; i < options.length; i++)\n    {\n      cor.push(options[i]===answer)\n    }\n    return (\n      <Question key = {num} tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {this.inc_right}></Question>\n    )\n  }\n  \n  render() {\n    if (!this.state.submitted) {\n      return (\n            <div className = 'App-body'>\n              <header className = 'App-header'>\n                  {this.state.title}\n              </header>\n              <ul className='sidebar'>\n                  {this.makeSidebar()}\n                  <button className='submit' onClick = {() => this.submit()}> submit answers</button>\n              </ul>              \n              {this.state.questions && this.display_questions(false)}\n            </div>\n      );\n    }\n    else {\n      // console.log('out',this.state.sidebar)\n      let x = this.state.questions && this.display_questions(true).then(() => console.log(this.state.right))\n      \n      return (\n        <div className = 'App-body'>\n          <header className = 'App-header'>\n              {this.state.title}\n          </header>\n          <ul className='sidebar'>\n              <div className = 'score'>{this.state.right}/10</div>\n              {this.makeSidebar()}\n          </ul>\n          {/* {this.state.questions && this.display_questions(this.state.questions, true)} */}\n          {x}\n        </div>\n        \n\n      )\n    }\n  }\n}\n\n// function display_questions(questions, sub) {\n//   return questions.map((question, index) => display_question(question, index,sub))\n// }\n\n// function display_question(question, num,sub) {\n//   var answer = question.answer\n//   var options = question.options\n//   var tweet = question.tweet\n//   var cor = []\n//   for (let i = 0; i < options.length; i++)\n//   {\n//     cor.push(options[i]===answer)\n//   }\n//   return (\n//     <Question tweet = {tweet} options = {options} answer = {answer} num={num} submitted={sub} correct = {cor} inc  = {() => this.inc_right}></Question>\n//   )\n// }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}